using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationAbstractClass
{
    // 1. We cannot create an object of Abstract Class
    // 2. An Abstract Class can never be sealed or static
    // 3. An Abstract Class can have abstract as well non abstract method
    // 4. We can create constructor of Abstract Class
    // 5. A concrete class cannot inherit more than one abstract class

    class Program
    {
        static void Main(string[] args)
        {
            //iphone obj = new iphonex();
            //obj.call();
            //obj.sms();
            //obj.phonecolor();
            //obj.phonemodel();

            //Iphone obj2 = new IphoneXS();
            //obj2.Call();
            //obj2.SMS();
            //obj2.PhoneColor();
            //obj2.PhoneModel();

            Iphone obj; 

            Console.ReadKey();
        }
    }
    public abstract class Iphone
    {
        public Iphone()
        {

        }
        public void Call()
        {
            Console.WriteLine("Phone Call");
        }
        public void SMS()
        {
            Console.WriteLine("Phone SMS");
        }
        public abstract void PhoneModel();
        public abstract void PhoneColor();
    }
    public class IPhoneX : Iphone
    {
        public override void PhoneColor()
        {
            Console.WriteLine("Black");
        }

        public override void PhoneModel()
        {
            Console.WriteLine("IPhone X");
        }
    }
    public class IphoneXS : Iphone
    {
        public override void PhoneColor()
        {
            Console.WriteLine("Gold");
        }

        public override void PhoneModel()
        {
            Console.WriteLine("IPhone XS");
        }
    }
}
